<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MacPlay (Posts about markup)</title><link>https://macplay.github.io/</link><description></description><atom:link href="https://macplay.github.io/categories/markup.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017 &lt;a href="mailto:ashfinal@sina.cn"&gt;ashfinal&lt;/a&gt; </copyright><lastBuildDate>Sat, 14 Oct 2017 05:09:46 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>在 Markdown 及 rst 文档中使用代码补全功能</title><link>https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;大家都知道，写 Markdown 文档时可以使用代码区块（Code Blocks)。给代码片段指定语言类型，就有漂亮的语法高亮效果。那有没有想过，直接在代码区块中写 Python 代码呢？&lt;/p&gt;
&lt;p&gt;这个事情还真可以做到，方法是使用 Neovim + ncm。&lt;a class="reference external" href="https://github.com/roxma/nvim-completion-manager"&gt;ncm&lt;/a&gt; 全称 “nvim-completion-manager”，是针对 &lt;a class="reference external" href="https://github.com/neovim/neovim"&gt;Neovim&lt;/a&gt; 编辑器的一款异步补全框架（插件）。笔者从 &lt;a class="reference external" href="https://www.vim.org"&gt;Vim&lt;/a&gt; 转到 &lt;a class="reference external" href="https://github.com/neovim/neovim"&gt;Neovim&lt;/a&gt; ，重新搜寻补全插件的过程中，经过与 &lt;a class="reference external" href="https://github.com/Shougo/deoplete.nvim"&gt;deoplete&lt;/a&gt; &lt;a class="footnote-reference" href="https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/#id2" id="id1"&gt;[1]&lt;/a&gt; 的比较，迅速入了 &lt;a class="reference external" href="https://github.com/roxma/nvim-completion-manager"&gt;ncm&lt;/a&gt; 的坑。;-)&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;另一款异步补全插件，由 Vim 大神 &lt;a class="reference external" href="https://github.com/Shougo"&gt;Shougo&lt;/a&gt; 开发。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>vim</category><guid>https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/</guid><pubDate>Thu, 12 Oct 2017 07:45:30 GMT</pubDate></item><item><title>从 Markdown 到 reStructuredText（三）</title><link>https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;本文是《从 Markdown 到 reStructuredText》系列文章的第三篇。和 Markdown 一样，reStructuredText 也是一种易读易写的纯文本标记语言，不过功能上更加强大（而且标准统一）。如果想了解其对应于 Markdown 的基本语法，请阅读 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;第一篇文章&lt;/a&gt; 。本文继续 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/"&gt;上一篇文章&lt;/a&gt; 的话题，聊一聊标记语言的样式问题，确切的说是 reStructuredText 在静态博客 Nikola 中的样式写法。&lt;/p&gt;
&lt;p&gt;“样式？标记语言还需要考虑样式？”估计不少人心里会犯嘀咕。然而，标记语言一直强调的是 &lt;strong&gt;易读易写&lt;/strong&gt; ，无需专门的商业版权软件来编辑， &lt;strong&gt;同时，纯文本可被转换为其它格式的文档&lt;/strong&gt;  &lt;a class="footnote-reference" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/#id4" id="id3"&gt;[1]&lt;/a&gt; 。转换为其它格式多半少不了样式，样式本身有助于读者对文档内容的理解，传递赏心悦目的文档对读者本人也是一种尊重。标记语言宣称的“毋需关注样式”更多的是谴责 &lt;strong&gt;过分关注样式&lt;/strong&gt; ，以至于丢掉了文档之魂——内容。&lt;/p&gt;
&lt;p&gt;个人以为，标记语言自始至终贯彻的原则只有一点： &lt;strong&gt;内容与样式分离&lt;/strong&gt; 。摆脱束缚用最简单的纯文本书写，而必要时又可以套用现成样式模板，导出或专业或活波……不同风格的文档方便分发。&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;见 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;第一篇文章&lt;/a&gt; 宗旨 -&amp;gt; reStructuredText 的预期目标&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>reST</category><guid>https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/</guid><pubDate>Wed, 11 Oct 2017 07:26:32 GMT</pubDate></item><item><title>从 Markdown 到 reStructuredText（二）</title><link>https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;table class="docinfo" frame="void" rules="none"&gt;
&lt;col class="docinfo-name"&gt;
&lt;col class="docinfo-content"&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Author:&lt;/th&gt;
&lt;td&gt;ashfinal&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Contact:&lt;/th&gt;
&lt;td&gt;&lt;a class="first last reference external" href="mailto:ashfinal@sina.cn"&gt;ashfinal@sina.cn&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Revision:&lt;/th&gt;
&lt;td&gt;1008&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Date:&lt;/th&gt;
&lt;td&gt;2017-10-08&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Copyright:&lt;/th&gt;
&lt;td&gt;&lt;a class="first last reference external" href="https://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh"&gt;CC BY-NC-SA 3.0&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;本文是《从 Markdown 到 reStructuredText》系列文章的第二篇。和 Markdown 一样，reStructuredText 也是一种易读易写的纯文本标记语言，不过功能上更加强大（而且标准统一）。如果想了解其对应于 Markdown 的基本语法，请阅读 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;上一篇文章&lt;/a&gt; 。本文主要从文档写作需求出发，聊一聊 reStructuredText 相对于 Markdown 的超集部分。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>reST</category><guid>https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/</guid><pubDate>Sun, 08 Oct 2017 06:45:54 GMT</pubDate></item><item><title>从 Markdown 到 reStructuredText</title><link>https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;如果你正在使用 Markdown 尚嫌其功能不足，本文提供了平滑过渡到 reStructuredText 的语法指导。从来没有接触过任何标记语言的读者，以及正在使用其它标记语言的读者，也可以通过阅读本文了解到 reStructuredText 的基本用法。文章结构基本上借鉴 &lt;a class="reference external" href="http://wowubuntu.com/markdown/"&gt;Markdown 语法说明&lt;/a&gt; ，相对 Markdown 的超集部分仅会简单提及——这些部分将会在其它文章中着重讲解。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>mathjax</category><category>reST</category><guid>https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/</guid><pubDate>Wed, 04 Oct 2017 08:20:05 GMT</pubDate></item></channel></rss>