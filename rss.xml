<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MacPlay</title><link>https://macplay.github.io/</link><description>Share something interesting about byte ocean</description><atom:link href="https://macplay.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017 &lt;a href="mailto:ashfinal@sina.cn"&gt;ashfinal&lt;/a&gt; </copyright><lastBuildDate>Fri, 13 Oct 2017 12:24:14 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>在 Markdown 及 rst 文档中使用代码补全功能</title><link>https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;大家都知道，写 Markdown 文档时可以使用代码区块（Code Blocks)。给代码片段指定语言类型，就有漂亮的语法高亮效果。那有没有想过，直接在代码区块中写 Python 代码呢？&lt;/p&gt;
&lt;p&gt;这个事情还真可以做到，方法是使用 Neovim + ncm。&lt;a class="reference external" href="https://github.com/roxma/nvim-completion-manager"&gt;ncm&lt;/a&gt; 全称 “nvim-completion-manager”，是针对 &lt;a class="reference external" href="https://github.com/neovim/neovim"&gt;Neovim&lt;/a&gt; 编辑器的一款异步补全框架（插件）。笔者从 &lt;a class="reference external" href="https://www.vim.org"&gt;Vim&lt;/a&gt; 转到 &lt;a class="reference external" href="https://github.com/neovim/neovim"&gt;Neovim&lt;/a&gt; ，重新搜寻补全插件的过程中，经过与 &lt;a class="reference external" href="https://github.com/Shougo/deoplete.nvim"&gt;deoplete&lt;/a&gt; &lt;a class="footnote-reference" href="https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/#id2" id="id1"&gt;[1]&lt;/a&gt; 的比较，迅速入了 &lt;a class="reference external" href="https://github.com/roxma/nvim-completion-manager"&gt;ncm&lt;/a&gt; 的坑。;-)&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;另一款异步补全插件，由 Vim 大神 &lt;a class="reference external" href="https://github.com/Shougo"&gt;Shougo&lt;/a&gt; 开发。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>vim</category><guid>https://macplay.github.io/posts/zai-markdown-ji-rst-wen-dang-zhong-shi-yong-dai-ma-bu-quan-gong-neng/</guid><pubDate>Thu, 12 Oct 2017 07:45:30 GMT</pubDate></item><item><title>从 Markdown 到 reStructuredText（三）</title><link>https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;本文是《从 Markdown 到 reStructuredText》系列文章的第三篇。和 Markdown 一样，reStructuredText 也是一种易读易写的纯文本标记语言，不过功能上更加强大（而且标准统一）。如果想了解其对应于 Markdown 的基本语法，请阅读 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;第一篇文章&lt;/a&gt; 。本文继续 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/"&gt;上一篇文章&lt;/a&gt; 的话题，聊一聊标记语言的样式问题，确切的说是 reStructuredText 在静态博客 Nikola 中的样式写法。&lt;/p&gt;
&lt;p&gt;“样式？标记语言还需要考虑样式？”估计不少人心里会犯嘀咕。然而，标记语言一直强调的是 &lt;strong&gt;易读易写&lt;/strong&gt; ，无需专门的商业版权软件来编辑， &lt;strong&gt;同时，纯文本可被转换为其它格式的文档&lt;/strong&gt;  &lt;a class="footnote-reference" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/#id4" id="id3"&gt;[1]&lt;/a&gt; 。转换为其它格式多半少不了样式，样式本身有助于读者对文档内容的理解，传递赏心悦目的文档对读者本人也是一种尊重。标记语言宣称的“毋需关注样式”更多的是谴责 &lt;strong&gt;过分关注样式&lt;/strong&gt; ，以至于丢掉了文档之魂——内容。&lt;/p&gt;
&lt;p&gt;个人以为，标记语言自始至终贯彻的原则只有一点： &lt;strong&gt;内容与样式分离&lt;/strong&gt; 。摆脱束缚用最简单的纯文本书写，而必要时又可以套用现成样式模板，导出或专业或活波……不同风格的文档方便分发。&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;见 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;第一篇文章&lt;/a&gt; 宗旨 -&amp;gt; reStructuredText 的预期目标&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>reST</category><guid>https://macplay.github.io/posts/cong-markdown-dao-restructuredtextsan/</guid><pubDate>Wed, 11 Oct 2017 07:26:32 GMT</pubDate></item><item><title>给博客文章添加打印功能支持</title><link>https://macplay.github.io/posts/gei-bo-ke-wen-zhang-tian-jia-da-yin-gong-neng-zhi-chi/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;刚刚给博客粗略添加了打印功能支持，利用 CSS 的媒体查询特性，非常简短的几行代码。效果是浏览文章页面的时候，点击 Safari &lt;cite&gt;打印&lt;/cite&gt; 或 &lt;cite&gt;导出为 PDF&lt;/cite&gt; 菜单，其它无关紧要的导航栏、侧边栏、评论框等会自动隐藏，只留下文章主体部分。&lt;/p&gt;
&lt;img alt="/images/blog_print.png" class="align-center" src="https://macplay.github.io/images/blog_print.png"&gt;
&lt;p&gt;Chrome 浏览器上应该也可以工作。考虑到“无纸化”理念如此普及的今天，该功能最常用的场景应该是导出 PDF 文档，也许文章标题叫“添加 PDF 导出功能”更好一些？ :)&lt;/p&gt;&lt;/div&gt;</description><category>pdf</category><category>static site</category><guid>https://macplay.github.io/posts/gei-bo-ke-wen-zhang-tian-jia-da-yin-gong-neng-zhi-chi/</guid><pubDate>Wed, 11 Oct 2017 06:55:31 GMT</pubDate></item><item><title>使用 Vim 在 Markdown 及 rst 文档中创建表格</title><link>https://macplay.github.io/posts/shi-yong-vim-zai-markdown-ji-rst-wen-dang-zhong-chuang-jian-biao-ge/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;之前提到过 reStructuredText 的表格类型 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/#table"&gt;Grid Tables&lt;/a&gt; 书写困难，普通编辑器难以胜任，可能有人好奇笔者是如何做的。对于 Vim、Emacs 两大编辑器来说，表格创建任务非常简单：&lt;/p&gt;
&lt;video src="https://macplay.github.io/videos/vim_table.mp4" loop autoplay&gt;
Your browser does not support the video tag.
&lt;/video&gt;&lt;p&gt;笔者平时使用较多的是 Vim 编辑器，借助强大的 &lt;a class="reference external" href="https://github.com/dhruvasagar/vim-table-mode"&gt;vim-table-mode&lt;/a&gt; 插件，只需正常输入表格内容和竖线符号 &lt;tt class="docutils literal"&gt;|&lt;/tt&gt; 就可以，其它事情如填充和对齐等等插件会自动处理。笔者针对 &lt;a class="reference external" href="https://github.com/dhruvasagar/vim-table-mode"&gt;vim-table-mode&lt;/a&gt; 插件做了几行配置，使其支持 Markdown、rst、org 表格的创建（org 表格在上图中没有展示），如果有人感兴趣的话，可以看一下个人 &lt;a class="reference external" href="https://github.com/ashfinal/vimrc-config/blob/0cba64e3a384fc78483a431b45b65a50daba34dd/.vimrc#L750"&gt;vimrc 配置&lt;/a&gt; 的相应部分。&lt;/p&gt;
&lt;p&gt;PS：发现录屏如果使用 GIF 格式，无论怎样压缩都达不到理想的画质和文件大小。最后使用 MP4 格式，1 分 53 秒时长的 720P 视频，压缩后仅仅 836 KB！感觉以后文章中插入动图可以抛弃 GIF 格式了。&lt;/p&gt;
&lt;p&gt;读者们注意到上面录屏其实是视频而不是图片吗？ :)&lt;/p&gt;&lt;/div&gt;</description><category>markdown</category><category>reST</category><category>vim</category><guid>https://macplay.github.io/posts/shi-yong-vim-zai-markdown-ji-rst-wen-dang-zhong-chuang-jian-biao-ge/</guid><pubDate>Tue, 10 Oct 2017 13:15:21 GMT</pubDate></item><item><title>从 Markdown 到 reStructuredText（二）</title><link>https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;table class="docinfo" frame="void" rules="none"&gt;
&lt;col class="docinfo-name"&gt;
&lt;col class="docinfo-content"&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Author:&lt;/th&gt;
&lt;td&gt;ashfinal&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Contact:&lt;/th&gt;
&lt;td&gt;&lt;a class="first last reference external" href="mailto:ashfinal@sina.cn"&gt;ashfinal@sina.cn&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Revision:&lt;/th&gt;
&lt;td&gt;1008&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Date:&lt;/th&gt;
&lt;td&gt;2017-10-08&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class="docinfo-name"&gt;Copyright:&lt;/th&gt;
&lt;td&gt;&lt;a class="first last reference external" href="https://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh"&gt;CC BY-NC-SA 3.0&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;本文是《从 Markdown 到 reStructuredText》系列文章的第二篇。和 Markdown 一样，reStructuredText 也是一种易读易写的纯文本标记语言，不过功能上更加强大（而且标准统一）。如果想了解其对应于 Markdown 的基本语法，请阅读 &lt;a class="reference external" href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;上一篇文章&lt;/a&gt; 。本文主要从文档写作需求出发，聊一聊 reStructuredText 相对于 Markdown 的超集部分。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>reST</category><guid>https://macplay.github.io/posts/cong-markdown-dao-restructuredtexter/</guid><pubDate>Sun, 08 Oct 2017 06:45:54 GMT</pubDate></item><item><title>At Home Outdoors</title><link>https://macplay.github.io/posts/at-home-outdoors/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;发现 &lt;a class="reference external" href="http://fancyapps.com/fancybox/3/docs/#embedding"&gt;fancyBox&lt;/a&gt; 能自动识别嵌入的媒体，比如 Youtube、Vimeo、Google Map、Instagram 等。&lt;/p&gt;
&lt;p&gt;尝试了一下 Vimeo ，体验非常好。这样静态博客的内容就可以更加丰富多彩。&lt;/p&gt;
&lt;p&gt;（点击封面加载视频）&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://vimeo.com/channels/staffpicks/236370796"&gt;&lt;img alt="https://i.vimeocdn.com/video/658454374_1040x584.jpg" class="align-center" src="https://i.vimeocdn.com/video/658454374_1040x584.jpg"&gt;&lt;/a&gt;
&lt;p&gt;写作语法上和插入一张图片没有什么区别：&lt;/p&gt;
&lt;pre class="code rst"&gt;&lt;a name="rest_code_f564316de59646fa8a21909d0a2493e8-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;image&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; https://i.vimeocdn.com/video/658454374_1040x584.jpg
&lt;a name="rest_code_f564316de59646fa8a21909d0a2493e8-2"&gt;&lt;/a&gt;   &lt;span class="nc"&gt;:align:&lt;/span&gt; &lt;span class="nf"&gt;center&lt;/span&gt;
&lt;a name="rest_code_f564316de59646fa8a21909d0a2493e8-3"&gt;&lt;/a&gt;   &lt;span class="nc"&gt;:target:&lt;/span&gt; &lt;span class="nf"&gt;https://vimeo.com/channels/staffpicks/236370796&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://macplay.github.io/posts/at-home-outdoors/</guid><pubDate>Thu, 05 Oct 2017 15:57:38 GMT</pubDate></item><item><title>从 Markdown 到 reStructuredText</title><link>https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;如果你正在使用 Markdown 尚嫌其功能不足，本文提供了平滑过渡到 reStructuredText 的语法指导。从来没有接触过任何标记语言的读者，以及正在使用其它标记语言的读者，也可以通过阅读本文了解到 reStructuredText 的基本用法。文章结构基本上借鉴 &lt;a class="reference external" href="http://wowubuntu.com/markdown/"&gt;Markdown 语法说明&lt;/a&gt; ，相对 Markdown 的超集部分仅会简单提及——这些部分将会在其它文章中着重讲解。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>markup</category><category>mathjax</category><category>reST</category><guid>https://macplay.github.io/posts/cong-markdown-dao-restructuredtext/</guid><pubDate>Wed, 04 Oct 2017 08:20:05 GMT</pubDate></item><item><title>有用的终端命令整理</title><link>https://macplay.github.io/posts/ji-ge-you-yong-de-zhong-duan-ming-ling-zheng-li/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;使用 zsh 之后，就养成了不整理终端命令的“坏”习惯。可能当时遇到问题折腾好半天才解决，但却从没有写个日志（哪怕片段）记录下来的想法。因为 zsh 默认保存上万条历史让这一做法显得没有必要，要再次调用的话直接 fzf 搜索，简单修改下回车执行就行。&lt;/p&gt;
&lt;p&gt;最近两天抹盘安装了 High Sierra 系统，装完后把之前的 &lt;cite&gt;.zsh_history&lt;/cite&gt; 文件拷贝回 home 目录，继续老习惯接着用就成。不过还是有点不放心，一方面担心使用频率超低（但有用）的命令可能会被冲掉，另一方面万一某一天 history 文件损坏就悲剧了，更重要的是有时会到别的电脑上执行命令。所以，还是整理下为好，该命令列表应该会不定期更新。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/ji-ge-you-yong-de-zhong-duan-ming-ling-zheng-li/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>shell</category><category>terminal</category><guid>https://macplay.github.io/posts/ji-ge-you-yong-de-zhong-duan-ming-ling-zheng-li/</guid><pubDate>Thu, 28 Sep 2017 13:47:01 GMT</pubDate></item><item><title>Old Man Smoked His Pipe</title><link>https://macplay.github.io/posts/old-man-smoked-his-pipe/</link><dc:creator>ashfinal</dc:creator><description>&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://macplay.github.io/images/Old_Man_Smoked_His_Pipe-by_Ian_Hex_of_LightSweep.jpg"&gt;&lt;img alt="Old_Man_Smoked_His_Pipe" src="https://macplay.github.io/images/Old_Man_Smoked_His_Pipe-by_Ian_Hex_of_LightSweep.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;</description><guid>https://macplay.github.io/posts/old-man-smoked-his-pipe/</guid><pubDate>Sun, 24 Sep 2017 14:18:36 GMT</pubDate></item><item><title>30 分钟搭建一个 Nikola 博客</title><link>https://macplay.github.io/posts/30-fen-zhong-jian-li-yi-ge-nikola-bo-ke/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;本文将利用 &lt;a class="reference external" href="https://help.github.com/articles/what-is-github-pages/"&gt;GitHub Pages&lt;/a&gt; 服务 30 分钟内建立一个 &lt;a class="reference external" href="https://getnikola.com"&gt;Nikola&lt;/a&gt; 静态博客，静态页面的更新、维护等则交由 &lt;a class="reference external" href="https://travis-ci.org"&gt;TravisCI&lt;/a&gt; 服务完成，最终效果如本博客所示。文章主要 &lt;a class="reference external" href="https://getnikola.com/blog/automating-nikola-rebuilds-with-travis-ci.html"&gt;参考来源在此&lt;/a&gt; ，将只涉及搭建步骤，要求读者对命令行操作有一定了解。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/30-fen-zhong-jian-li-yi-ge-nikola-bo-ke/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>nikola</category><category>static site</category><category>travis</category><guid>https://macplay.github.io/posts/30-fen-zhong-jian-li-yi-ge-nikola-bo-ke/</guid><pubDate>Fri, 22 Sep 2017 07:50:29 GMT</pubDate></item></channel></rss>